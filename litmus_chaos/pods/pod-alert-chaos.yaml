kind: Workflow
apiVersion: argoproj.io/v1alpha1
metadata:
  name: pod-alert-chaos
  namespace: litmus
  labels:
    infra_id: 042cd914-8485-4a6c-bebc-1c150876bc47
    revision_id: cc936f68-69ab-49e3-87fe-878c8d24737b
    workflow_id: 602dc180-b475-46fe-b6b0-3f54e38c4c8c
    workflows.argoproj.io/controller-instanceid: 042cd914-8485-4a6c-bebc-1c150876bc47
spec:
  templates:
    - name: pod-alert-chaos
      inputs: {}
      outputs: {}
      metadata: {}
      steps:
        - - name: install-chaos-faults
            template: install-chaos-faults
            arguments: {}
        - - name: pod-cpu-hog-p8m
            template: pod-cpu-hog-p8m
            arguments: {}
        - - name: pod-network-loss-dzq
            template: pod-network-loss-dzq
            arguments: {}
        - - name: pod-network-latency-e83
            template: pod-network-latency-e83
            arguments: {}
        - - name: pod-network-corruption-4jg
            template: pod-network-corruption-4jg
            arguments: {}
        - - name: node-cpu-hog-rzp
            template: node-cpu-hog-rzp
            arguments: {}
        - - name: disk-fill-74k
            template: disk-fill-74k
            arguments: {}
        - - name: pod-memory-hog-fue
            template: pod-memory-hog-fue
            arguments: {}
        - - name: pod-cpu-hog-exec-hsv
            template: pod-cpu-hog-exec-hsv
            arguments: {}
        - - name: pod-memory-hog-exec-372
            template: pod-memory-hog-exec-372
            arguments: {}
        - - name: pod-network-duplication-wj1
            template: pod-network-duplication-wj1
        - - name: pod-autoscaler-ph8
            template: pod-autoscaler-ph8
        - - name: pod-io-stress-kf3
            template: pod-io-stress-kf3
        - - name: pod-dns-error-jrs
            template: pod-dns-error-jrs
        - - name: pod-dns-spoof-t59
            template: pod-dns-spoof-t59
        - - name: pod-network-partition-o1k
            template: pod-network-partition-o1k
        - - name: pod-http-latency-hmo
            template: pod-http-latency-hmo
        - - name: pod-http-status-code-oeq
            template: pod-http-status-code-oeq
        - - name: pod-http-modify-header-x27
            template: pod-http-modify-header-x27
        - - name: pod-http-modify-body-5fo
            template: pod-http-modify-body-5fo
        - - name: pod-http-reset-peer-b66
            template: pod-http-reset-peer-b66
        - - name: cleanup-chaos-resources
            template: cleanup-chaos-resources
            arguments: {}
    - name: install-chaos-faults
      inputs:
        artifacts:
          - name: pod-cpu-hog-p8m
            path: /tmp/pod-cpu-hog-p8m.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects CPU consumption on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-cpu-hog
                  labels:
                    name: pod-cpu-hog
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-cpu-hog
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: CPU_CORES
                        value: "1"
                      - name: CPU_LOAD
                        value: "100"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: RAMP_TIME
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: STRESS_IMAGE
                        value: alexeiled/stress-ng:latest-ubuntu
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: NODE_LABEL
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-cpu-hog
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 3.16.0
          - name: pod-network-loss-dzq
            path: /tmp/pod-network-loss-dzq.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects network packet loss on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-network-loss
                  labels:
                    name: pod-network-loss
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-network-loss
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: NETWORK_INTERFACE
                        value: eth0
                      - name: TC_IMAGE
                        value: gaiadocker/iproute2
                      - name: NETWORK_PACKET_LOSS_PERCENTAGE
                        value: "100"
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: TARGET_PODS
                        value: ""
                      - name: NODE_LABEL
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: DESTINATION_IPS
                        value: ""
                      - name: DESTINATION_HOSTS
                        value: ""
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-network-loss
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 3.16.0
          - name: pod-network-latency-e83
            path: /tmp/pod-network-latency-e83.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects network latency on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-network-latency
                  labels:
                    name: pod-network-latency
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-network-latency
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: NETWORK_INTERFACE
                        value: eth0
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: TC_IMAGE
                        value: gaiadocker/iproute2
                      - name: NETWORK_LATENCY
                        value: "2000"
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: JITTER
                        value: "0"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: DESTINATION_IPS
                        value: ""
                      - name: DESTINATION_HOSTS
                        value: ""
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: NODE_LABEL
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-network-latency
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 3.16.0
          - name: pod-network-corruption-4jg
            path: /tmp/pod-network-corruption-4jg.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Inject network packet corruption into application pod
                kind: ChaosExperiment

                metadata:
                  name: pod-network-corruption
                  labels:
                    name: pod-network-corruption
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-network-corruption
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: NETWORK_INTERFACE
                        value: eth0
                      - name: TC_IMAGE
                        value: gaiadocker/iproute2
                      - name: NETWORK_PACKET_CORRUPTION_PERCENTAGE
                        value: "100"
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: NODE_LABEL
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: DESTINATION_IPS
                        value: ""
                      - name: DESTINATION_HOSTS
                        value: ""
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-network-corruption
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 3.16.0
          - name: node-cpu-hog-rzp
            path: /tmp/node-cpu-hog-rzp.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Give a CPU spike on a node belonging to a deployment
                kind: ChaosExperiment

                metadata:
                  name: node-cpu-hog
                  labels:
                    name: node-cpu-hog
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Cluster
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                      - apiGroups:
                          - ""
                        resources:
                          - nodes
                        verbs:
                          - get
                          - list
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name node-cpu-hog
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: NODE_CPU_CORE
                        value: ""
                      - name: CPU_LOAD
                        value: "100"
                      - name: TARGET_NODES
                        value: ""
                      - name: NODE_LABEL
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: NODES_AFFECTED_PERC
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: node-cpu-hog
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: 3.16.0
          - name: disk-fill-74k
            path: /tmp/disk-fill-74k.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Fillup Ephemeral Storage of a Resource
                kind: ChaosExperiment

                metadata:
                  name: disk-fill
                  labels:
                    name: disk-fill
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name disk-fill
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: FILL_PERCENTAGE
                        value: "80"
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: DATA_BLOCK_SIZE
                        value: "256"
                      - name: TARGET_PODS
                        value: ""
                      - name: EPHEMERAL_STORAGE_MEBIBYTES
                        value: ""
                      - name: NODE_LABEL
                        value: ""
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: disk-fill
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/host-path-usage: "true"
                      app.kubernetes.io/version: 3.16.0
          - name: pod-memory-hog-fue
            path: /tmp/pod-memory-hog-fue.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects memory consumption on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-memory-hog
                  labels:
                    name: pod-memory-hog
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-memory-hog
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: MEMORY_CONSUMPTION
                        value: "500"
                      - name: NUMBER_OF_WORKERS
                        value: "1"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: RAMP_TIME
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: STRESS_IMAGE
                        value: alexeiled/stress-ng:latest-ubuntu
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: SEQUENCE
                        value: parallel
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: NODE_LABEL
                        value: ""
                    labels:
                      name: pod-memory-hog
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 3.16.0
          - name: pod-cpu-hog-exec-hsv
            path: /tmp/pod-cpu-hog-exec-hsv.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects CPU consumption on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-cpu-hog-exec
                  labels:
                    name: pod-cpu-hog-exec
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-cpu-hog-exec
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: CPU_CORES
                        value: "1"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: RAMP_TIME
                        value: ""
                      - name: CHAOS_KILL_COMMAND
                        value: kill $(find /proc -name exe -lname '*/md5sum' 2>&1 | grep -v 'Permission
                          denied' | awk -F/ '{print $(NF-1)}')
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-cpu-hog-exec
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: 3.16.0
          - name: pod-memory-hog-exec-372
            path: /tmp/pod-memory-hog-exec-372.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects memory consumption on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-memory-hog-exec
                  labels:
                    name: pod-memory-hog-exec
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-memory-hog-exec
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: MEMORY_CONSUMPTION
                        value: "500"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: RAMP_TIME
                        value: ""
                      - name: CHAOS_KILL_COMMAND
                        value: kill $(find /proc -name exe -lname '*/dd' 2>&1 | grep -v 'Permission
                          denied' | awk -F/ '{print $(NF-1)}' | head -n 1)
                      - name: SEQUENCE
                        value: parallel
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                    labels:
                      name: pod-memory-hog-exec
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: 3.16.0
          - name: pod-network-duplication-wj1
            path: /tmp/pod-network-duplication-wj1.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects network packet duplication on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-network-duplication
                  labels:
                    name: pod-network-duplication
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-network-duplication
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: TC_IMAGE
                        value: gaiadocker/iproute2
                      - name: NETWORK_INTERFACE
                        value: eth0
                      - name: NETWORK_PACKET_DUPLICATION_PERCENTAGE
                        value: "100"
                      - name: TARGET_PODS
                        value: ""
                      - name: NODE_LABEL
                        value: ""
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: DESTINATION_IPS
                        value: ""
                      - name: DESTINATION_HOSTS
                        value: ""
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-network-duplication
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 3.16.0
          - name: pod-autoscaler-ph8
            path: /tmp/pod-autoscaler-ph8.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Scale the application replicas and test the node autoscaling on cluster
                kind: ChaosExperiment

                metadata:
                  name: pod-autoscaler
                  labels:
                    name: pod-autoscaler
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Cluster
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                        verbs:
                          - list
                          - get
                          - patch
                          - update
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-autoscaler
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: REPLICA_COUNT
                        value: "5"
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                    labels:
                      name: pod-autoscaler
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: 3.16.0
          - name: pod-io-stress-kf3
            path: /tmp/pod-io-stress-kf3.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    IO stress on a app pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-io-stress
                  labels:
                    name: pod-io-stress
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-io-stress
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "120"
                      - name: FILESYSTEM_UTILIZATION_PERCENTAGE
                        value: "10"
                      - name: FILESYSTEM_UTILIZATION_BYTES
                        value: ""
                      - name: NUMBER_OF_WORKERS
                        value: "4"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: VOLUME_MOUNT_PATH
                        value: ""
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: NODE_LABEL
                        value: ""
                      - name: RAMP_TIME
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-io-stress
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 3.16.0
          - name: pod-dns-error-jrs
            path: /tmp/pod-dns-error-jrs.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Pod DNS Error injects DNS failure/error in target pod containers
                kind: ChaosExperiment

                metadata:
                  name: pod-dns-error
                  labels:
                    name: pod-dns-error
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    args:
                      - -c
                      - ./experiments -name pod-dns-error
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: SEQUENCE
                        value: parallel
                      - name: TARGET_HOSTNAMES
                        value: ""
                      - name: MATCH_SCHEME
                        value: exact
                    labels:
                      experiment: pod-dns-error
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 3.16.0
          - name: pod-dns-spoof-t59
            path: /tmp/pod-dns-spoof-t59.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: >
                    Pod DNS Spoof can spoof particular DNS requests in target pod container to
                    desired target hostnames
                kind: ChaosExperiment

                metadata:
                  name: pod-dns-spoof
                  labels:
                    name: pod-dns-spoof
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    args:
                      - -c
                      - ./experiments -name pod-dns-spoof
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: SEQUENCE
                        value: parallel
                      - name: SPOOF_MAP
                        value: ""
                    labels:
                      experiment: pod-dns-spoof
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 3.16.0
          - name: pod-network-partition-o1k
            path: /tmp/pod-network-partition-o1k.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects 100% network packet loss on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-network-partition
                  labels:
                    name: pod-network-partition
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - networking.k8s.io
                        resources:
                          - networkpolicies
                        verbs:
                          - create
                          - delete
                          - list
                          - get
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-network-partition
                    command:
                      - /bin/bash
                    env:
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: DESTINATION_IPS
                        value: ""
                      - name: DESTINATION_HOSTS
                        value: ""
                      - name: POLICY_TYPES
                        value: all
                      - name: POD_SELECTOR
                        value: ""
                      - name: NAMESPACE_SELECTOR
                        value: ""
                      - name: PORTS
                        value: ""
                    labels:
                      name: pod-network-partition
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: 3.16.0
          - name: pod-http-latency-hmo
            path: /tmp/pod-http-latency-hmo.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: |
                    Injects HTTP request latency on pods belonging to an app deployment
                kind: ChaosExperiment

                metadata:
                  name: pod-http-latency
                  labels:
                    name: pod-http-latency
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-http-latency
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: LATENCY
                        value: "2000"
                      - name: TARGET_SERVICE_PORT
                        value: "80"
                      - name: TOXICITY
                        value: "100"
                      - name: PROXY_PORT
                        value: "20000"
                      - name: NETWORK_INTERFACE
                        value: eth0
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: NODE_LABEL
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-http-latency
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 3.16.0
          - name: pod-http-status-code-oeq
            path: /tmp/pod-http-status-code-oeq.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: >
                    It injects chaos inside the pod which modifies the status code of the
                    response from the provided application server to desired status code
                    provided by the user and reverts after a specified duration
                kind: ChaosExperiment

                metadata:
                  name: pod-http-status-code
                  labels:
                    name: pod-http-status-code
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-http-status-code
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: STATUS_CODE
                        value: ""
                      - name: MODIFY_RESPONSE_BODY
                        value: "true"
                      - name: RESPONSE_BODY
                        value: ""
                      - name: CONTENT_ENCODING
                        value: ""
                      - name: CONTENT_TYPE
                        value: text/plain
                      - name: TARGET_SERVICE_PORT
                        value: "80"
                      - name: TOXICITY
                        value: "100"
                      - name: PROXY_PORT
                        value: "20000"
                      - name: NETWORK_INTERFACE
                        value: eth0
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: NODE_LABEL
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-http-status-code
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: 3.16.0
          - name: pod-http-modify-header-x27
            path: /tmp/pod-http-modify-header-x27.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: >
                    It injects the chaos inside the pod which modifies the header of the
                    request/response from the provided application server to the headers
                    provided by the user and reverts after a specified duration
                kind: ChaosExperiment

                metadata:
                  name: pod-http-modify-header
                  labels:
                    name: pod-http-modify-header
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-http-modify-header
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: HEADERS_MAP
                        value: "{}"
                      - name: HEADER_MODE
                        value: response
                      - name: TARGET_SERVICE_PORT
                        value: "80"
                      - name: TOXICITY
                        value: "100"
                      - name: PROXY_PORT
                        value: "20000"
                      - name: NETWORK_INTERFACE
                        value: eth0
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: NODE_LABEL
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-http-modify-header
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/runtime-api-usage: "true"
                      app.kubernetes.io/version: 3.16.0
          - name: pod-http-modify-body-5fo
            path: /tmp/pod-http-modify-body-5fo.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: >
                    It injects the chaos inside the pod which modifies the body of the response
                    from the provided application server to the body string provided by the user
                    and reverts after a specified duration
                kind: ChaosExperiment

                metadata:
                  name: pod-http-modify-body
                  labels:
                    name: pod-http-modify-body
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-http-modify-body
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: RESPONSE_BODY
                        value: ""
                      - name: CONTENT_ENCODING
                        value: ""
                      - name: CONTENT_TYPE
                        value: text/plain
                      - name: TARGET_SERVICE_PORT
                        value: "80"
                      - name: TOXICITY
                        value: "100"
                      - name: PROXY_PORT
                        value: "20000"
                      - name: NETWORK_INTERFACE
                        value: eth0
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: NODE_LABEL
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-http-modify-body
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: 3.16.0
          - name: pod-http-reset-peer-b66
            path: /tmp/pod-http-reset-peer-b66.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                description:
                  message: >
                    it injects chaos into the pod which stops outgoing HTTP requests by
                    resetting the TCP connection and then reverts back to the original state
                    after a specified duration
                kind: ChaosExperiment

                metadata:
                  name: pod-http-reset-peer
                  labels:
                    name: pod-http-reset-peer
                    app.kubernetes.io/part-of: litmus
                    app.kubernetes.io/component: chaosexperiment
                    app.kubernetes.io/version: 3.16.0
                spec:
                  definition:
                    scope: Namespaced
                    permissions:
                      - apiGroups:
                          - ""
                        resources:
                          - pods
                        verbs:
                          - create
                          - delete
                          - get
                          - list
                          - patch
                          - update
                          - deletecollection
                      - apiGroups:
                          - ""
                        resources:
                          - events
                        verbs:
                          - create
                          - get
                          - list
                          - patch
                          - update
                      - apiGroups:
                          - ""
                        resources:
                          - configmaps
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - ""
                        resources:
                          - pods/log
                        verbs:
                          - get
                          - list
                          - watch
                      - apiGroups:
                          - ""
                        resources:
                          - pods/exec
                        verbs:
                          - get
                          - list
                          - create
                      - apiGroups:
                          - apps
                        resources:
                          - deployments
                          - statefulsets
                          - replicasets
                          - daemonsets
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - apps.openshift.io
                        resources:
                          - deploymentconfigs
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - ""
                        resources:
                          - replicationcontrollers
                        verbs:
                          - get
                          - list
                      - apiGroups:
                          - argoproj.io
                        resources:
                          - rollouts
                        verbs:
                          - list
                          - get
                      - apiGroups:
                          - batch
                        resources:
                          - jobs
                        verbs:
                          - create
                          - list
                          - get
                          - delete
                          - deletecollection
                      - apiGroups:
                          - litmuschaos.io
                        resources:
                          - chaosengines
                          - chaosexperiments
                          - chaosresults
                        verbs:
                          - create
                          - list
                          - get
                          - patch
                          - update
                          - delete
                    image: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                    imagePullPolicy: Always
                    args:
                      - -c
                      - ./experiments -name pod-http-reset-peer
                    command:
                      - /bin/bash
                    env:
                      - name: TARGET_CONTAINER
                        value: ""
                      - name: LIB_IMAGE
                        value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                      - name: RESET_TIMEOUT
                        value: "0"
                      - name: TARGET_SERVICE_PORT
                        value: "80"
                      - name: TOXICITY
                        value: "100"
                      - name: PROXY_PORT
                        value: "20000"
                      - name: NETWORK_INTERFACE
                        value: eth0
                      - name: TOTAL_CHAOS_DURATION
                        value: "60"
                      - name: RAMP_TIME
                        value: ""
                      - name: DEFAULT_HEALTH_CHECK
                        value: "false"
                      - name: PODS_AFFECTED_PERC
                        value: ""
                      - name: TARGET_PODS
                        value: ""
                      - name: CONTAINER_RUNTIME
                        value: containerd
                      - name: SOCKET_PATH
                        value: /run/containerd/containerd.sock
                      - name: NODE_LABEL
                        value: ""
                      - name: SEQUENCE
                        value: parallel
                    labels:
                      name: pod-http-reset-peer
                      app.kubernetes.io/part-of: litmus
                      app.kubernetes.io/component: experiment-job
                      app.kubernetes.io/version: 3.16.0
      outputs: {}
      metadata: {}
      container:
        name: ""
        image: litmuschaos/k8s:2.11.0
        command:
          - sh
          - -c
        args:
          - kubectl apply -f /tmp/ -n {{workflow.parameters.adminModeNamespace}}
            && sleep 30
        resources: {}
    - name: cleanup-chaos-resources
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ""
        image: litmuschaos/k8s:2.11.0
        command:
          - sh
          - -c
        args:
          - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n
            {{workflow.parameters.adminModeNamespace}}
        resources: {}
    - name: pod-cpu-hog-p8m
      inputs:
        artifacts:
          - name: pod-cpu-hog-p8m
            path: /tmp/chaosengine-pod-cpu-hog-p8m.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                    workflow_name: pod-alert-chaos
                  annotations:
                    probeRef: '[{"name":"health","mode":"SOT"}]'
                  generateName: pod-cpu-hog-p8m
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-cpu-hog-ns
                    applabel: app=pod-cpu-hog
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-cpu-hog
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "300"
                            - name: CPU_CORES
                              value: "1"
                            - name: CPU_LOAD
                              value: "100"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: RAMP_TIME
                              value: ""
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: STRESS_IMAGE
                              value: alexeiled/stress-ng:latest-ubuntu
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: NODE_LABEL
                              value: ""
                            - name: SEQUENCE
                              value: parallel
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-cpu-hog-p8m.yaml
          - -saveName=/tmp/engine-name
        resources: {}
    - name: pod-network-loss-dzq
      inputs:
        artifacts:
          - name: pod-network-loss-dzq
            path: /tmp/chaosengine-pod-network-loss-dzq.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                    workflow_name: pod-alert-chaos
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                  generateName: pod-network-loss-dzq
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-network-ns
                    applabel: app=pod-network-loss
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-network-loss
                      spec:
                        components:
                          env:
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: NETWORK_INTERFACE
                              value: eth0
                            - name: TC_IMAGE
                              value: gaiadocker/iproute2
                            - name: NETWORK_PACKET_LOSS_PERCENTAGE
                              value: "100"
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: RAMP_TIME
                              value: ""
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: TARGET_PODS
                              value: ""
                            - name: NODE_LABEL
                              value: ""
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: DESTINATION_IPS
                              value: ""
                            - name: DESTINATION_HOSTS
                              value: ""
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: SEQUENCE
                              value: parallel
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-network-loss-dzq.yaml
          - -saveName=/tmp/engine-name
        resources: {}
    - name: pod-network-latency-e83
      inputs:
        artifacts:
          - name: pod-network-latency-e83
            path: /tmp/chaosengine-pod-network-latency-e83.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                    workflow_name: pod-alert-chaos
                  annotations:
                    probeRef: '[{"name":"health","mode":"SOT"}]'
                  generateName: pod-network-latency-e83
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-network-ns
                    applabel: app=pod-network-latency
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-network-latency
                      spec:
                        components:
                          env:
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: NETWORK_INTERFACE
                              value: eth0
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: TC_IMAGE
                              value: gaiadocker/iproute2
                            - name: NETWORK_LATENCY
                              value: "2000"
                            - name: TOTAL_CHAOS_DURATION
                              value: "300"
                            - name: RAMP_TIME
                              value: ""
                            - name: JITTER
                              value: "0"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: DESTINATION_IPS
                              value: ""
                            - name: DESTINATION_HOSTS
                              value: ""
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: NODE_LABEL
                              value: ""
                            - name: SEQUENCE
                              value: parallel
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-network-latency-e83.yaml
          - -saveName=/tmp/engine-name
        resources: {}
    - name: pod-network-corruption-4jg
      inputs:
        artifacts:
          - name: pod-network-corruption-4jg
            path: /tmp/chaosengine-pod-network-corruption-4jg.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                    workflow_name: pod-alert-chaos
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                  generateName: pod-network-corruption-4jg
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-network-ns
                    applabel: app=pod-network-corruption
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-network-corruption
                      spec:
                        components:
                          env:
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: NETWORK_INTERFACE
                              value: eth0
                            - name: TC_IMAGE
                              value: gaiadocker/iproute2
                            - name: NETWORK_PACKET_CORRUPTION_PERCENTAGE
                              value: "100"
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: RAMP_TIME
                              value: ""
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: NODE_LABEL
                              value: ""
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: DESTINATION_IPS
                              value: ""
                            - name: DESTINATION_HOSTS
                              value: ""
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: SEQUENCE
                              value: parallel
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-network-corruption-4jg.yaml
          - -saveName=/tmp/engine-name
        resources: {}
    - name: node-cpu-hog-rzp
      inputs:
        artifacts:
          - name: node-cpu-hog-rzp
            path: /tmp/chaosengine-node-cpu-hog-rzp.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                    workflow_name: pod-alert-chaos
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                  generateName: node-cpu-hog-rzp
                spec:
                  engineState: active
                  auxiliaryAppInfo: ""
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: node-cpu-hog
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "300"
                            - name: RAMP_TIME
                              value: ""
                            - name: NODE_CPU_CORE
                              value: ""
                            - name: CPU_LOAD
                              value: "100"
                            - name: TARGET_NODES
                              value: ""
                            - name: NODE_LABEL
                              value: ""
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: NODES_AFFECTED_PERC
                              value: ""
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: SEQUENCE
                              value: parallel
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-node-cpu-hog-rzp.yaml
          - -saveName=/tmp/engine-name
        resources: {}
    - name: disk-fill-74k
      inputs:
        artifacts:
          - name: disk-fill-74k
            path: /tmp/chaosengine-disk-fill-74k.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                    workflow_name: pod-alert-chaos
                  annotations:
                    probeRef: '[{"name":"health","mode":"SOT"}]'
                  generateName: disk-fill-74k
                spec:
                  engineState: active
                  auxiliaryAppInfo: ""
                  appinfo:
                    appns: disk-fill-ns
                    applabel: app=disk-fill
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: disk-fill
                      spec:
                        components:
                          env:
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: FILL_PERCENTAGE
                              value: "80"
                            - name: TOTAL_CHAOS_DURATION
                              value: "300"
                            - name: RAMP_TIME
                              value: ""
                            - name: DATA_BLOCK_SIZE
                              value: "256"
                            - name: TARGET_PODS
                              value: ""
                            - name: EPHEMERAL_STORAGE_MEBIBYTES
                              value: ""
                            - name: NODE_LABEL
                              value: ""
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SEQUENCE
                              value: parallel
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-disk-fill-74k.yaml
          - -saveName=/tmp/engine-name
        resources: {}
    - name: pod-memory-hog-fue
      inputs:
        artifacts:
          - name: pod-memory-hog-fue
            path: /tmp/chaosengine-pod-memory-hog-fue.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                    workflow_name: pod-alert-chaos
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                  generateName: pod-memory-hog-fue
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-memory-hog-ns
                    applabel: app=pod-memory-hog
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-memory-hog
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "300"
                            - name: MEMORY_CONSUMPTION
                              value: "500"
                            - name: NUMBER_OF_WORKERS
                              value: "1"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: RAMP_TIME
                              value: ""
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: STRESS_IMAGE
                              value: alexeiled/stress-ng:latest-ubuntu
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: SEQUENCE
                              value: parallel
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: NODE_LABEL
                              value: ""
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-memory-hog-fue.yaml
          - -saveName=/tmp/engine-name
        resources: {}
    - name: pod-cpu-hog-exec-hsv
      inputs:
        artifacts:
          - name: pod-cpu-hog-exec-hsv
            path: /tmp/chaosengine-pod-cpu-hog-exec-hsv.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                    workflow_name: pod-alert-chaos
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                  generateName: pod-cpu-hog-exec-hsv
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-cpu-hog-ns
                    applabel: app=pod-cpu-hog
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-cpu-hog-exec
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: CPU_CORES
                              value: "1"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: RAMP_TIME
                              value: ""
                            - name: CHAOS_KILL_COMMAND
                              value: kill $(find /proc -name exe -lname '*/md5sum' 2>&1 | grep -v 'Permission
                                denied' | awk -F/ '{print $(NF-1)}')
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: SEQUENCE
                              value: parallel
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-cpu-hog-exec-hsv.yaml
          - -saveName=/tmp/engine-name
        resources: {}
    - name: pod-memory-hog-exec-372
      inputs:
        artifacts:
          - name: pod-memory-hog-exec-372
            path: /tmp/chaosengine-pod-memory-hog-exec-372.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                    workflow_name: pod-alert-chaos
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                  generateName: pod-memory-hog-exec-372
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-memory-hog-ns
                    applabel: app=pod-memory-hog-exec
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-memory-hog-exec
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "300"
                            - name: MEMORY_CONSUMPTION
                              value: "500"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: RAMP_TIME
                              value: ""
                            - name: CHAOS_KILL_COMMAND
                              value: kill $(find /proc -name exe -lname '*/dd' 2>&1 | grep -v 'Permission
                                denied' | awk -F/ '{print $(NF-1)}' | head -n 1)
                            - name: SEQUENCE
                              value: parallel
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: TARGET_PODS
                              value: ""
      outputs: {}
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-memory-hog-exec-372.yaml
          - -saveName=/tmp/engine-name
        resources: {}
    - name: pod-network-duplication-wj1
      inputs:
        artifacts:
          - name: pod-network-duplication-wj1
            path: /tmp/chaosengine-pod-network-duplication-wj1.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  name: nginx-network-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-network-ns
                    applabel: app=pod-network-duplication
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-network-duplication
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "300"
                            - name: RAMP_TIME
                              value: ""
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: TC_IMAGE
                              value: gaiadocker/iproute2
                            - name: NETWORK_INTERFACE
                              value: eth0
                            - name: NETWORK_PACKET_DUPLICATION_PERCENTAGE
                              value: "100"
                            - name: TARGET_PODS
                              value: ""
                            - name: NODE_LABEL
                              value: ""
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: DESTINATION_IPS
                              value: ""
                            - name: DESTINATION_HOSTS
                              value: ""
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: SEQUENCE
                              value: parallel
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-network-duplication-wj1.yaml
          - -saveName=/tmp/engine-name
    - name: pod-autoscaler-ph8
      inputs:
        artifacts:
          - name: pod-autoscaler-ph8
            path: /tmp/chaosengine-pod-autoscaler-ph8.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                spec:
                  engineState: active
                  auxiliaryAppInfo: ""
                  appinfo:
                    appns: pod-autoscaler-ns
                    applabel: app=pod-autoscaler
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-autoscaler
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "300"
                            - name: RAMP_TIME
                              value: ""
                            - name: REPLICA_COUNT
                              value: "5"
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-autoscaler-ph8.yaml
          - -saveName=/tmp/engine-name
    - name: pod-io-stress-kf3
      inputs:
        artifacts:
          - name: pod-io-stress-kf3
            path: /tmp/chaosengine-pod-io-stress-kf3.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-io-stress-ns
                    applabel: app=pod-io-stress
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-io-stress
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "300"
                            - name: FILESYSTEM_UTILIZATION_PERCENTAGE
                              value: "10"
                            - name: FILESYSTEM_UTILIZATION_BYTES
                              value: ""
                            - name: NUMBER_OF_WORKERS
                              value: "4"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: VOLUME_MOUNT_PATH
                              value: ""
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: NODE_LABEL
                              value: ""
                            - name: RAMP_TIME
                              value: ""
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: SEQUENCE
                              value: parallel
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-io-stress-kf3.yaml
          - -saveName=/tmp/engine-name
    - name: pod-dns-error-jrs
      inputs:
        artifacts:
          - name: pod-dns-error-jrs
            path: /tmp/chaosengine-pod-dns-error-jrs.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                spec:
                  appinfo:
                    appns: pod-dns-ns
                    applabel: app=pod-dns-error
                    appkind: deployment
                  engineState: active
                  auxiliaryAppInfo: ""
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-dns-error
                      spec:
                        components:
                          env:
                            - name: TARGET_CONTAINER
                              value: "300"
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: RAMP_TIME
                              value: ""
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: SEQUENCE
                              value: parallel
                            - name: TARGET_HOSTNAMES
                              value: ""
                            - name: MATCH_SCHEME
                              value: exact
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-dns-error-jrs.yaml
          - -saveName=/tmp/engine-name
    - name: pod-dns-spoof-t59
      inputs:
        artifacts:
          - name: pod-dns-spoof-t59
            path: /tmp/chaosengine-pod-dns-spoof-t59.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                  generateName: pod-dns-spoof-t59
                spec:
                  appinfo:
                    appns: pod-dns-ns
                    applabel: app=pod-dns-spoof
                    appkind: deployment
                  engineState: active
                  auxiliaryAppInfo: ""
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-dns-spoof
                      spec:
                        components:
                          env:
                            - name: TARGET_CONTAINER
                              value: "300"
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: RAMP_TIME
                              value: ""
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: SEQUENCE
                              value: parallel
                            - name: SPOOF_MAP
                              value: ""
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-dns-spoof-t59.yaml
          - -saveName=/tmp/engine-name
    - name: pod-network-partition-o1k
      inputs:
        artifacts:
          - name: pod-network-partition-o1k
            path: /tmp/chaosengine-pod-network-partition-o1k.yaml
            raw:
              data: |
                apiVersion: litmuschaos.io/v1alpha1
                kind: ChaosEngine
                metadata:
                  name: nginx-network-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-network-ns
                    applabel: app=pod-network-partition
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-network-partition
                      spec:
                        components:
                          env:
                            - name: TOTAL_CHAOS_DURATION
                              value: "300"
                            - name: RAMP_TIME
                              value: ""
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: DESTINATION_IPS
                              value: ""
                            - name: DESTINATION_HOSTS
                              value: ""
                            - name: POLICY_TYPES
                              value: all
                            - name: POD_SELECTOR
                              value: ""
                            - name: NAMESPACE_SELECTOR
                              value: ""
                            - name: PORTS
                              value: ""
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-network-partition-o1k.yaml
          - -saveName=/tmp/engine-name
    - name: pod-http-latency-hmo
      inputs:
        artifacts:
          - name: pod-http-latency-hmo
            path: /tmp/chaosengine-pod-http-latency-hmo.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  name: nginx-http-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-http-chaos-ns
                    applabel: app=pod-http-latency
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-http-latency
                      spec:
                        components:
                          env:
                            - name: TARGET_CONTAINER
                              value: "200"
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: LATENCY
                              value: "2000"
                            - name: TARGET_SERVICE_PORT
                              value: "80"
                            - name: TOXICITY
                              value: "100"
                            - name: PROXY_PORT
                              value: "20000"
                            - name: NETWORK_INTERFACE
                              value: eth0
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: RAMP_TIME
                              value: ""
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: NODE_LABEL
                              value: ""
                            - name: SEQUENCE
                              value: parallel
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-http-latency-hmo.yaml
          - -saveName=/tmp/engine-name
    - name: pod-http-status-code-oeq
      inputs:
        artifacts:
          - name: pod-http-status-code-oeq
            path: /tmp/chaosengine-pod-http-status-code-oeq.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-http-chaos-ns
                    applabel: app=pod-http-status-code
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-http-status-code
                      spec:
                        components:
                          env:
                            - name: TARGET_CONTAINER
                              value: "350"
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: STATUS_CODE
                              value: ""
                            - name: MODIFY_RESPONSE_BODY
                              value: "true"
                            - name: RESPONSE_BODY
                              value: ""
                            - name: CONTENT_ENCODING
                              value: ""
                            - name: CONTENT_TYPE
                              value: text/plain
                            - name: TARGET_SERVICE_PORT
                              value: "80"
                            - name: TOXICITY
                              value: "100"
                            - name: PROXY_PORT
                              value: "20000"
                            - name: NETWORK_INTERFACE
                              value: eth0
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: RAMP_TIME
                              value: ""
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: NODE_LABEL
                              value: ""
                            - name: SEQUENCE
                              value: parallel
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-http-status-code-oeq.yaml
          - -saveName=/tmp/engine-name
    - name: pod-http-modify-header-x27
      inputs:
        artifacts:
          - name: pod-http-modify-header-x27
            path: /tmp/chaosengine-pod-http-modify-header-x27.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  name: nginx-http-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-http-chaos-ns
                    applabel: app=pod-http-modify-header
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-http-modify-header
                      spec:
                        components:
                          env:
                            - name: TARGET_CONTAINER
                              value: "200"
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: HEADERS_MAP
                              value: "{}"
                            - name: HEADER_MODE
                              value: response
                            - name: TARGET_SERVICE_PORT
                              value: "80"
                            - name: TOXICITY
                              value: "100"
                            - name: PROXY_PORT
                              value: "20000"
                            - name: NETWORK_INTERFACE
                              value: eth0
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: RAMP_TIME
                              value: ""
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: NODE_LABEL
                              value: ""
                            - name: SEQUENCE
                              value: parallel
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-http-modify-header-x27.yaml
          - -saveName=/tmp/engine-name
    - name: pod-http-modify-body-5fo
      inputs:
        artifacts:
          - name: pod-http-modify-body-5fo
            path: /tmp/chaosengine-pod-http-modify-body-5fo.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-http-chaos-ns
                    applabel: app=pod-http-modify-body
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-http-modify-body
                      spec:
                        components:
                          env:
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: RESPONSE_BODY
                              value: ""
                            - name: CONTENT_ENCODING
                              value: ""
                            - name: CONTENT_TYPE
                              value: text/plain
                            - name: TARGET_SERVICE_PORT
                              value: "80"
                            - name: TOXICITY
                              value: "100"
                            - name: PROXY_PORT
                              value: "20000"
                            - name: NETWORK_INTERFACE
                              value: eth0
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: RAMP_TIME
                              value: ""
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: NODE_LABEL
                              value: ""
                            - name: SEQUENCE
                              value: parallel
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-http-modify-body-5fo.yaml
          - -saveName=/tmp/engine-name
    - name: pod-http-reset-peer-b66
      inputs:
        artifacts:
          - name: pod-http-reset-peer-b66
            path: /tmp/chaosengine-pod-http-reset-peer-b66.yaml
            raw:
              data: >
                apiVersion: litmuschaos.io/v1alpha1

                kind: ChaosEngine

                metadata:
                  name: nginx-chaos
                  namespace: "{{workflow.parameters.adminModeNamespace}}"
                  labels:
                    workflow_run_id: "{{ workflow.uid }}"
                  annotations:
                    probeRef: '[{"name":"health","mode":"EOT"}]'
                spec:
                  engineState: active
                  appinfo:
                    appns: pod-http-chaos-ns
                    applabel: app=pod-http-reset-peer
                    appkind: deployment
                  chaosServiceAccount: litmus-admin
                  experiments:
                    - name: pod-http-reset-peer
                      spec:
                        components:
                          env:
                            - name: TARGET_CONTAINER
                              value: ""
                            - name: LIB_IMAGE
                              value: litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.16.0
                            - name: RESET_TIMEOUT
                              value: "0"
                            - name: TARGET_SERVICE_PORT
                              value: "80"
                            - name: TOXICITY
                              value: "100"
                            - name: PROXY_PORT
                              value: "20000"
                            - name: NETWORK_INTERFACE
                              value: eth0
                            - name: TOTAL_CHAOS_DURATION
                              value: "60"
                            - name: RAMP_TIME
                              value: ""
                            - name: DEFAULT_HEALTH_CHECK
                              value: "false"
                            - name: PODS_AFFECTED_PERC
                              value: ""
                            - name: TARGET_PODS
                              value: ""
                            - name: CONTAINER_RUNTIME
                              value: containerd
                            - name: SOCKET_PATH
                              value: /run/containerd/containerd.sock
                            - name: NODE_LABEL
                              value: ""
                            - name: SEQUENCE
                              value: parallel
      metadata:
        labels:
          weight: "10"
      container:
        name: ""
        image: docker.io/litmuschaos/litmus-checker:2.11.0
        args:
          - -file=/tmp/chaosengine-pod-http-reset-peer-b66.yaml
          - -saveName=/tmp/engine-name
  entrypoint: pod-alert-chaos
  arguments:
    parameters:
      - name: adminModeNamespace
        value: litmus
  serviceAccountName: argo-chaos
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
status: {}
